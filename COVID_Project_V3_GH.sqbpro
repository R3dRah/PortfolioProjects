<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/christopherthompson/Desktop/Portfolio_Projects/COVID_Project_V1.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8619"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,27:mainPercentPopulationVaccinated"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="57"/><column index="3" value="69"/><column index="4" value="55"/><column index="5" value="68"/><column index="6" value="66"/><column index="7" value="124"/><column index="8" value="74"/><column index="9" value="72"/><column index="10" value="129"/><column index="11" value="133"/><column index="12" value="132"/><column index="13" value="189"/><column index="14" value="139"/><column index="15" value="137"/><column index="16" value="195"/><column index="17" value="102"/><column index="18" value="72"/><column index="19" value="138"/><column index="20" value="82"/><column index="21" value="147"/><column index="22" value="131"/><column index="23" value="196"/><column index="24" value="140"/><column index="25" value="206"/><column index="26" value="63"/><column index="27" value="65"/><column index="28" value="145"/><column index="29" value="143"/><column index="30" value="121"/><column index="31" value="201"/><column index="32" value="77"/><column index="33" value="89"/><column index="34" value="90"/><column index="35" value="104"/><column index="36" value="106"/><column index="37" value="135"/><column index="38" value="102"/><column index="39" value="159"/><column index="40" value="178"/><column index="41" value="180"/><column index="42" value="209"/><column index="43" value="225"/><column index="44" value="98"/><column index="45" value="71"/><column index="46" value="108"/><column index="47" value="71"/><column index="48" value="88"/><column index="49" value="87"/><column index="50" value="91"/><column index="51" value="97"/><column index="52" value="127"/><column index="53" value="115"/><column index="54" value="93"/><column index="55" value="83"/><column index="56" value="128"/><column index="57" value="161"/><column index="58" value="91"/><column index="59" value="151"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="57"/><column index="2" value="56"/><column index="3" value="56"/><column index="4" value="63"/><column index="5" value="102"/><column index="6" value="135"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT *
FROM	CovidDeaths
WHERE continent is not null;

/*SELECT *
FROM CovidVaccinations*/


SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 1,2;


--Total Cases vs Total Deaths
--Shows likelihood of dyying if you contract Covid in your country
SELECT location, date, total_cases, total_deaths, (total_deaths*100/total_cases) as 'Death Percentage'
FROM CovidDeaths
WHERE location like '%states%'
ORDER BY 1,2;

-- Looking at Total Cases vs the population
--Shows what percentage of population got Covid
SELECT location, date, total_cases, population, (total_cases*100/population) as 'population_percentage'
FROM CovidDeaths
WHERE location like '%states%'
ORDER BY 1,2;

-- Looking at Countries with Highest Infection Rate compared to population
SELECT location, population, MAX(total_cases) as 'Highest_infection_Count',  MAX((total_cases*100/population)) as 'population_percentage'
FROM CovidDeaths
GROUP BY location, population
ORDER BY population_percentage DESC;


-- Showing countries with highest death Count per population

SELECT location, MAX(cast(total_deaths as int)) as 'Total_Death_Count'
FROM CovidDeaths
WHERE continent is not null
GROUP BY location
ORDER BY Total_Death_Count desc;


--continent is null

SELECT location, MAX(cast(total_deaths as int)) as 'Total_Death_Count'
FROM CovidDeaths
WHERE continent is null
GROUP BY location
ORDER BY Total_Death_Count desc;

--Continents with the highest deathcount per population

SELECT continent, MAX(cast(total_deaths as int)) as 'Total_Death_Count'
FROM CovidDeaths
WHERE continent is  not null
GROUP BY continent
ORDER BY Total_Death_Count desc;



-- Global Numbers
SELECT date, SUM(new_cases) as 'Total Cases', 	SUM(cast(new_deaths as int)) as 'Total Deaths', SUM(cast(new_deaths as int))*100/SUM(new_cases) as 'Death Percentage'
FROM CovidDeaths
WHERE continent is not NULL
GROUP BY date
ORDER BY 1,2;

--Global Numbers Totals
SELECT  SUM(new_cases) as 'Total Cases', 	SUM(cast(new_deaths as int)) as 'Total Deaths', SUM(cast(new_deaths as int))*100/SUM(new_cases) as 'Death Percentage'
FROM CovidDeaths
WHERE continent is not NULL
ORDER BY 1,2;


--JOIN
SELECT * 
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
	
	
--Total Population vs Vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not NULL
ORDER BY 1,2,3;

--RollingVaccinationCount Table created

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) as 'RollingVaccinationCount'
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not NULL
ORDER BY 2,3;

-- USE CTE to aggregate rolling vaccination count

WITH PopvsVac (continent, location, date, population, new_vaccinations, RollingVaccinationCount)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) as 'RollingVaccinationCount'
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not NULL
)
SELECT *, (RollingVaccinationCount*100/population)
FROM PopvsVac;

--TEMP TABLE

Create TABLE  #PercentPopulationVaccinated
(
Continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric,
RollingVaccinationCount numeric 
)



INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) as 'RollingVaccinationCount'
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not NULL

SELECT *, (RollingVaccinationCount*100/population)
FROM #PercentPopulationVaccinated;

--Creating View to store data for later visualization

Create View PercentPopulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date) as 'RollingVaccinationCount'
FROM CovidDeaths dea
JOIN CovidVaccinations vac 
	ON dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not NULL

SELECT *
FROM PercentPopulationVaccinated
</sql><current_tab id="0"/></tab_sql></sqlb_project>
